#!/bin/bash
vmRunning() {
    return $( ! [ -z "$(sudo -u vboxuser_${1} VBoxManage list runningvms )" ] &> /dev/null );
}

stopVm() {
    vm="${1}";
    pullPlug=15;

    printf "Attempting the graceful stopping of %s..." "${vm}";

    if vmRunning "${vm}"; then
        sudo -u vboxuser_"${vm}" VBoxManage controlvm "${vm}" acpipowerbutton;

        while vmRunning "${vm}" && [ "${pullPlug}" -gt 0 ] ; do
            printf ".";
            (( pullPlug-- ));
	    sleep 1;
        done;
    else
        printf "...no need!\n\n";
        sudo -u vboxuser_"${vm}" VBoxManage controlvm "${vm}" acpipowerbutton;
    fi;

    if vmRunning "${vm}" && [ ${pullPlug} -eq 0 ]; then
        printf "15 seconds has elapsed.\nPulling the plug.\n\n";
        sudo -u vboxuser_"${vm}" VBoxManage controlvm "${vm}" poweroff;
        wait $!;
    fi

    return $?;
}

stopAll() {
    printf "=== Stopping all VMs at %s ===" "$(date)\n";
    for dirPath in /media/VMs/disks/data/*/; do
        dirPath="${dirPath%*/}";
        vm="${dirPath##*/}";
        stopVm "${vm}";
    done
    printf "=== Finished stopping all VMs at %s ===" "$(date)";
}



if [ $# -eq 0 ]; then
    printf "No parameter supplied. You need to provide the name of the VM as a parameter, or 'all' to stop all VMs";
    exit 1;
fi

vm="${1}";

case "${vm}" in
    all ) stopAll;;
    *   ) stopVm "${vm}";;
esac
